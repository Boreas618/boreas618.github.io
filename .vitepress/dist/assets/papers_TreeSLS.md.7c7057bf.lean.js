import{_ as r,C as i,o as c,c as p,H as s,w as a,k as e,Q as o,a as t}from"./chunks/framework.5ae544db.js";const D=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"papers/TreeSLS.md","filePath":"papers/TreeSLS.md"}'),l={name:"papers/TreeSLS.md"},h=o("",9),g=e("h3",null,"Data Persistence (Checkpointing) in SLS on NVM",-1),d=o("",5),u=e("p",null,[e("strong",null,"Capability Tree")],-1),m=e("p",null,[t("In capacity-based systems, resources are represented by "),e("strong",null,"object"),t("s and a capability is "),e("strong",null,"an object reference with a set of access rights"),t(".")],-1),y=e("p",null,"Capability-based systems usually group all types of capabilities into a capability derivation tree. Processes can access a certain subset of the tree.",-1),b=e("img",{src:"https://p.ipic.vip/4g3kv1.png",alt:"Screenshot 2023-11-27 at 1.51.21â€¯AM",style:{zoom:"33%"}},null,-1),f=e("p",null,[t("Check out the post on "),e("strong",null,"capacity-based systems"),t(" here: "),e("a",{href:"https://www2.seas.gwu.edu/~parmer/posts/2016-10-31-capability-based-systems.html",target:"_blank",rel:"noreferrer"},"https://www2.seas.gwu.edu/~parmer/posts/2016-10-31-capability-based-systems.html")],-1),k=e("p",null,[t("Check out a capability-based microkernel OS "),e("em",null,"composite os"),t(" here: "),e("a",{href:"https://github.com/gwsystems/composite",target:"_blank",rel:"noreferrer"},"https://github.com/gwsystems/composite")],-1),w=o("",20);function _(v,T,S,M,V,N){const n=i("center");return c(),p("div",null,[h,s(n,null,{default:a(()=>[g]),_:1}),d,e("blockquote",null,[u,m,y,s(n,null,{default:a(()=>[b]),_:1}),f,k]),w])}const C=r(l,[["render",_]]);export{D as __pageData,C as default};
